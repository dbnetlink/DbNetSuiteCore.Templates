@page "/Select/LinkedGrid"
@layout SampleLayout
@using DbNetSuiteCore.Blazor.Samples.Components.Layout
@using DbNetSuiteCore.Blazor.Samples.Components.Pages
@using DbNetSuiteCore.Models
@using DbNetSuiteCore.Constants
@using DbNetSuiteCore.Enums
@using Microsoft.AspNetCore.Components.Sections
@inject IHttpContextAccessor httpContextAccessor
@{
    var orderDetailsGrid = new GridModel("[Order Details]");
    orderDetailsGrid.Columns = new List<GridColumn>
    {
        new GridColumn("OrderId", "Invoice Line ID") {ForeignKey = true },
        new GridColumn("ProductID", "Product")  {Lookup = new Lookup("Products","ProductID","ProductName")},
        new GridColumn("UnitPrice", "Price") { Format = "c"},
        new GridColumn("QUantity", "Quantity"),
        new GridColumn("UnitPrice*Quantity", "Cost") { Format = "c", DataType = typeof(Decimal)},
        new GridColumn("Discount", "Discount") { Format = "p"},
        new GridColumn( "UnitPrice*Quantity* (1-Discount)", "Net Cost") { Format = "c", DataType = typeof(Decimal)},
    };

    orderDetailsGrid.Caption = "Order Details";
    orderDetailsGrid.PageSize = 5;

    var ordersGrid = new GridModel("Orders");
    ordersGrid.Columns = new List<GridColumn>
    {
        new GridColumn("OrderId", "Order ID") {PrimaryKey = true },
        new GridColumn("customerid", "Customer ID") {ForeignKey = true },
        new GridColumn("employeeid", "Employee") { Lookup = new Lookup("Employees","EmployeeID","coalesce(LastName,'') || ', ' || coalesce(FirstName,'')" ) },
        new GridColumn("OrderDate", "Ordered"),
        new GridColumn("RequiredDate", "Required"),
        new GridColumn("ShippedDate", "Shipped"),
        new GridColumn("Freight", "Cost") { Format = "c"}
    };
    ordersGrid.LinkedControl = orderDetailsGrid;
    ordersGrid.Caption = "Orders";
    ordersGrid.PageSize = 5;

    var customerSelect = new SelectModel(DataSourceType.SQLite, "Northwind", "customers") { Caption = "Customers", EmptyOption = "Please select a customer", Searchable = true };

    customerSelect.Columns = new List<SelectColumn>
    {
        new SelectColumn("CustomerID"),
        new SelectColumn("coalesce(CompanyName,'') || ', ' || coalesce(Address,'') || ', ' || coalesce(City,'')") {DataType = typeof(String)}
    };
    customerSelect.LinkedControl = ordersGrid;

    <div class="flex flex-column">
        <div class="flex">
            @(new DbNetSuiteCore.Blazor.Control(httpContextAccessor).Render(customerSelect))
        </div>
        <div class="flex">
            @(new DbNetSuiteCore.Blazor.Control(httpContextAccessor).Render(ordersGrid))
        </div>
        <div class="flex">
            @(new DbNetSuiteCore.Blazor.Control(httpContextAccessor).Render(orderDetailsGrid))
        </div>
    </div>
}
<SectionContent SectionName="summary">
    <p data-summary>A @HelperFunctions.Wiki("select-overview", "Select") control can also link to a @HelperFunctions.Wiki("grid-overview", "Grid") control using the @HelperFunctions.Wiki("selectmodel-properties#linkedcontrolcomponentmodel", "LinkedControl") property</p>
</SectionContent>
