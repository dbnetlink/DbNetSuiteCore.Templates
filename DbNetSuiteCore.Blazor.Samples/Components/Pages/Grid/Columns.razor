@page "/Grid/Columns"
@layout SampleLayout
@using DbNetSuiteCore.Blazor.Samples.Components.Layout
@using DbNetSuiteCore.Blazor.Samples.Components.Pages
@using DbNetSuiteCore.Models
@using DbNetSuiteCore.Constants
@using DbNetSuiteCore.Enums
@using Microsoft.AspNetCore.Components.Sections
@inject IHttpContextAccessor httpContextAccessor

<PageTitle>Customers</PageTitle>
@{
    GridModel customerGrid = new GridModel(DataSourceType.SQLite, "northwind", "Customers");
    customerGrid.Columns = new List<GridColumn>
    {
        new GridColumn("CompanyName", "Name"), 
        new GridColumn("coalesce(Address,'') || ', ' || coalesce(City,'')", "Address") { DataType = typeof(string)},
        new GridColumn("coalesce(Phone,'') || ' / ' || coalesce(Fax,'')", "Phone/Fax") { DataType = typeof(string)}
    };

    @(new DbNetSuiteCore.Blazor.Control(httpContextAccessor).Render(customerGrid))
}

<SectionContent SectionName="summary">
    <p data-summary>You can control the columns selected from the table or view by defining @HelperFunctions.Wiki("gridcolumn", "GridColumn") objects and adding them the @HelperFunctions.Wiki("gridmodel#columns-ienumerablegridcolumn", "Columns") property. In this example columns are selected and combined in an expression and also given a @HelperFunctions.Wiki("gridcolumn#label-string", "Label").</p>
</SectionContent>