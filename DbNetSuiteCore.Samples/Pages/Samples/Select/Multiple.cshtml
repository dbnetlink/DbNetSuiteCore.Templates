@page
@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Models
@using DbNetSuiteCore.Samples.Helpers
@model DbNetSuiteCoreSamples.ViewModels.SampleModel
@section Title
{
    <p data-summary>Setting the @RazorHelper.HelpLink("selectmodel-properties#size-int32", "Size") property to a number greater than 1 and the @RazorHelper.HelpLink("selectmodel-properties#rowselection-rowselection", "RowSelection") property to @RazorHelper.HelpLink("gridmodel-enums#rowselection", "Multiple") true allows the user to select multiple options.</p>
}
@section Control {
@{
    SelectModel customerSelect = new SelectModel(DataSourceType.SQLite, "northwind", "Customers")
    {
        Caption = "Customer",
        Searchable = true,
        Size = 20,
        RowSelection = RowSelection.Multiple,
        Columns = new List<SelectColumn>()
        {
            new SelectColumn("CustomerID"),
            new SelectColumn("CompanyName")
        }
    };
    customerSelect.ClientEvents[SelectClientEvent.OptionSelected] = "showSelectedCustomers";

    <div class="flex flex-row">
        <div class="flex">
            @(await new DbNetSuiteCore.SelectControl(HttpContext).Render(customerSelect))
        </div>
        <div class="flex flex-column" style="padding:10px">
            <h5>Selected Customers</h5> 
            <div id="selectedCustomers"></div>
        </div>
    </div>
}}


@section Scripts
{
<script type="text/javascript" class="source">
function showSelectedCustomers(selectControl, args) {
    var selectedCustomerDiv = document.querySelector("#selectedCustomers");
    if (selectControl.select.value == "") {
        selectedCustomerDiv.innerText = ""
    }
    else {
        var selectedCustomers = []
        Array.from(args.selectedOptions).forEach((o) => selectedCustomers.push(`${o.text} (${o.value})`));
        selectedCustomerDiv.innerHTML = selectedCustomers.join('<br/>')
    }
}
</script>
}

   