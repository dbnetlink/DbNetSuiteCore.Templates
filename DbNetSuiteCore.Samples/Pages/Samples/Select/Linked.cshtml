@page
@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Models
@using DbNetSuiteCore.Samples.Helpers
@model DbNetSuiteCoreSamples.ViewModels.SampleModel
@section Title
{
    <p data-summary><b>Select</b> controls can be linked together using the @RazorHelper.HelpLink("selectmodel-properties#linkedcontrolcomponentmodel", "LinkedControl") property to create a hierarchy of dependent select controls. You can also use @RazorHelper.HelpLink("selectmodel-events", "events") to easily integrate 3rd party libraries such as maps.</p>
}
@section Control {
@{
    var citySelect = new SelectModel("Cities") { Caption = "City", Searchable = true, Layout = LayoutType.Row, EmptyOption = "Select a city" };
    citySelect.Columns = new List<SelectColumn>
    {
        new SelectColumn("cityid") {PrimaryKey = true },
        new SelectColumn("cityname"),
        new SelectColumn("stateid") { ForeignKey = true },
        new SelectColumn("latitude"),
        new SelectColumn("longitude")
    };
    citySelect.ClientEvents[SelectClientEvent.OptionSelected] = "showSelectedCity";

    var stateSelect = new SelectModel("States") { Caption = "State", Searchable = true, Layout = LayoutType.Row, EmptyOption = "Select a state" };
    stateSelect.Columns = new List<SelectColumn>
    {
        new SelectColumn("stateid") {PrimaryKey = true },
        new SelectColumn("statename"),
        new SelectColumn("countryid") { ForeignKey = true}
    };
    stateSelect.LinkedControl = citySelect;

    var countrySelect = new SelectModel(DataSourceType.SQLite, "DbNetSuiteCore", "Countries") { Caption = "Country", Searchable = true, Layout = LayoutType.Row, EmptyOption = "Select a country" };
    countrySelect.Columns = new List<SelectColumn>
    {
        new SelectColumn("countryid") {PrimaryKey = true },
        new SelectColumn("countryname")
    };
    countrySelect.LinkedControl = stateSelect;

    <div class="flex flex-column">
        <div class="flex">
        @(await new DbNetSuiteCore.SelectControl(HttpContext).Render(countrySelect))
        </div>
        <div class="flex">
        @(await new DbNetSuiteCore.SelectControl(HttpContext).Render(stateSelect))
        </div>
        <div class="flex">
        @(await new DbNetSuiteCore.SelectControl(HttpContext).Render(citySelect))
        </div>
        <div class="flex" id="selectedCity" style="padding-top:10px"></div>
    </div>

    <style>
    div.caption {width:80px}
    </style>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

        <div class="flex p-1" id="map" style="height:400px; width:800px;margin-top:10px; border:1pt solid gainsboro; border-radius:5px;"></div>
}}

@section Scripts
{
<script type="text/javascript" class="source">
    var map, marker;

    function showSelectedCity(citySelect, args) {
        var selectedCity = document.querySelector("#selectedCity");
        if (citySelect.select.value == "") {
            selectedCity.innerText = ""
            document.querySelector("#map").innerText = ""
        }
        else {
            var selectedOption = args.selectedOptions[0];
            var stateOption = citySelect.parentControl.select.selectedOptions[0]
            var countryOption = citySelect.parentControl.parentControl.select.selectedOptions[0]
            selectedCity.innerHTML = `You selected:&nbsp;<b>${countryOption.text} > ${stateOption.text} > ${selectedOption.text}</b>`

            let latitude = Number(selectedOption.dataset.latitude);
            let longitude = Number(selectedOption.dataset.longitude);
            renderMap(latitude, longitude);
        }
    }

    function renderMap(latitude, longitude) {
        if (map) {
            marker.setLatLng([latitude, longitude]);
            map.panTo([latitude, longitude]);
        }
        else {
            map = L.map('map').setView([latitude, longitude], 12);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            marker = L.marker([latitude, longitude]).addTo(map);
        }
    }
</script>
}





<script>
    var map, marker;

    function updateMap(gridControl, args) {
      
    }

  
</script>
