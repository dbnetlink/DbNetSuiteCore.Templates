@page
@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Models
@using DbNetSuiteCore.Samples.Helpers

@model DbNetSuiteCoreSamples.ViewModels.SampleModel
@section Title
{
    <p data-summary>This sample uses the @RazorHelper.HelpLink("select-overview", "Select") control to filter records returned to the form.</p>
}
@section Control {
    @{
        var categorySelect = new SelectModel(DataSourceType.SQLite, "Northwind", "Categories") { Caption = "Categories", Searchable = true, Layout = LayoutType.Row };
        categorySelect.Columns = new List<SelectColumn>() {
    new SelectColumn("CategoryId"),
    new SelectColumn("CategoryName")
};
        var productForm = new FormModel("Products") { Insert = true, Delete = true, ToolbarPosition = ToolbarPosition.Bottom, Caption = "Products" };
        productForm.Columns = new List<FormColumn>() {
    new FormColumn("ProductID","ID"),
    new FormColumn("ProductName", "Name"),
    new FormColumn("SupplierID","Supplier") { Lookup = new Lookup("Suppliers", "SupplierId", "CompanyName"),Required = true },
    new FormColumn("CategoryID","Category") { Lookup = new Lookup("Categories", "CategoryID", "CategoryName"),Required = true, ForeignKey = true },
    new FormColumn("QuantityPerUnit", "Qty"){ InitialValue = 0},
    new FormColumn("UnitPrice", "Price") {Required = true,InitialValue = 0, MinValue = 0, MaxValue = 100 },
    new FormColumn("UnitsInStock", "Stock") {Required = true,InitialValue = 0, MinValue = 0 },
    new FormColumn("UnitsOnOrder", "On Order") {Required = true,InitialValue = 0 },
    new FormColumn("ReorderLevel", "Re-order Level") {Required = true,InitialValue = 0, MaxValue = 50 },
    new FormColumn("Discontinued") {DataType = typeof(bool), InitialValue = true}
};

        categorySelect.LinkedControl = productForm;

        @(await new DbNetSuiteCore.Control(HttpContext).Render(categorySelect))
        <hr />
        @(await new DbNetSuiteCore.Control(HttpContext).Render(productForm))
    }
}