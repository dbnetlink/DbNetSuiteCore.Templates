@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Constants
@using DbNetSuiteCore.Models

@using DbNetSuiteCore.Samples.Helpers
@using Microsoft.AspNetCore.Html
@model DbNetSuiteCoreSamples.ViewModels.SampleModel
@section Title
{
    <p data-summary>On of the more powerful features of the grid control is that they can be linked together to create parent child relationships.</p> <p>To link a child grid simply add it to the parent control using the @RazorHelper.HelpLink("gridmodel-properties#linkedcontrolcomponentmodel", "LinkedControl") property. The grids are linked by associating the column in the child grid specified as a @RazorHelper.HelpLink("gridcolumn-properties#foreignkey-bool", "ForeignKey") with the column in the parent grid identified as a @RazorHelper.HelpLink("gridcolumn-properties#primarykey-bool", "PrimaryKey"). The sample also demonstrates use of the client-side event @RazorHelper.HelpLink("gridmodel-events#rowselected", "RowSelected") to set the tab label using the client-side @RazorHelper.HelpLink("grid-client-side-api#columnvalue", "columnValue"). method</p>
}

@section Styles
{
    <style>
        .dbnetsuite {
            margin-top: 10px;
        }
    </style>
}


@section Control {
@{
    Model.GridModels[1].ClientEvents[GridClientEvent.RowSelected] = "setOrderDetailsTabLabel";
    Model.GridModels[0].ClientEvents[GridClientEvent.RowSelected] = "setOrderTabLabel";

    <div class="source">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            @Tab("Customers", true)
            @Tab("Orders", false)
            @Tab("Order Details", false)
        </ul>
        <div class="tab-content" id="linkedGrids">
            <div class="tab-pane fade show active" id="customers" role="tabpanel" aria-labelledby="customers-tab">
                    @(await new DbNetSuiteCore.Control(Context).Render(Model.GridModels[0]))
            </div>
            <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                    @(await new DbNetSuiteCore.Control(Context).Render(Model.GridModels[1]))
            </div>
            <div class="tab-pane fade" id="orderdetails" role="tabpanel" aria-labelledby="orderdetails-tab">
                    @(await new DbNetSuiteCore.Control(Context).Render(Model.GridModels[2]))
            </div>
        </div>
    </div>
}}

@section Scripts {
<script type="text/javascript" class="source">
    function setOrderTabLabel(grid, args) {
        $("button#orders-tab").html("Customer <b>" + grid.columnValue("customerid", args.selectedRow) + "</b> orders")
    }

    function setOrderDetailsTabLabel(grid, args) {
        $("button#orderdetails-tab").html("Invoice <b>" + grid.columnValue("invoiceid", args.selectedRow) + "</b> details")
    }
</script>
}

@functions
{
    public static HtmlString Tab(string label, bool active)
    {
        string name = label.ToLower().Replace(" ", string.Empty);
        return new HtmlString($"<li class=\"nav-item\" role=\"presentation\"><button class=\"nav-link {(active ? "active" : string.Empty)}\" id=\"{name}-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#{name}\" type=\"button\" role=\"tab\" aria-controls=\"{name}\" aria-selected=\"{active.ToString().ToLower()}\">{label}</button></li>");
    }
}